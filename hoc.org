* Scientific Papers as Code

** Prose as Programmable Data

We could start with using Pollen which is a wonderful means to generate code in the pollen markdown language and thus compile the same content into multiple formats like PDF and HTML.


** Reference:

1.	Pollen  - https://github.com/mbutterick/pollen

2.	Pollen Documentation - http://docs.racket-lang.org/pollen/


* Why House of Cards?

** Abstract

“What we truly understand, we never forget” 

It is our strong belief that contextual learning is the best form of learning which leads to deeper understanding and insights on the subject matter.


** There is just too much to learn!

*** Programming Languages

*** Mathematics and Computer Science

*** Web Frameworks 

*** Databases

*** System Design

*** Websites 


** Roadmap

*** We build on these stories using a Deck of Cards.

*** Algorithms could be based on simple stories about personified cards. 

*** Modeling card games using the modern software development techniques.
    



 
* Data Structures of choice
https://www.geeksforgeeks.org/data-structures/
** Clojure  
*** list
*** hash-map

** References 
https://en.wikipedia.org/wiki/List_of_data_structures

* Algorithms

** Types of Algorithms 
*** Searching 
**** Linear Search 
**** Binary Search 
**** Jump Search
**** Interpolation Search
**** Exponential Search
**** Ternary Search
*** Sorting
**** Selection Sort
**** Bubble Sort
**** Insertion Sort
**** Merge Sort
**** Heap Sort
**** Quick Sort
**** Radix Sort
**** Counting Sort
**** Bucket Sort
**** Shell Sort
**** Comb Sort
**** Pigeonhole Sort
**** Cycle Sort
** Resources

*** https://www.geeksforgeeks.org/fundamentals-of-algorithms/

* Playing Card Games
https://gitlab.com/abhi18av/game-ebooks
** Solitaire

* Web Programming

* Mobile Application

* Desktop Application
